---
# central-imaging.com config
# Derek Merck
# Summer 2018
#
# For a local setup
# $ ansible-playbook -i test_inv.yml central-im-playbook.yml --skip-tags deps -t databases
#
# For remote setup
# $ ansible-playbook -i ../../_secrets/do_inv.yml central-im-playbook.yml -b -t databases

# TODO: Trialist, Snappass, GuidMint: apps could be configured as dokku apps for easy update

################################
# Setup security
################################

- hosts: all
  tags:  secured

  roles:

    - name: Setup ssl certificates for host
      role: secured
      secured_cb_staging: False
      secured_cb_force:   True


################################
# Setup indexer
################################

- hosts: indexers
  tags:  indexers

  roles:

    - name: Setup Splunk
      role: splunk-docker
      splunk_docker_image_tag: "7.1.2"
      splunk_use_data_container: False
      splunk_secured: True
      splunk_hec_enabled: True
      splunk_indices: [logging, remotes, dicom]
      # Persistent values for splunk_hec_tokens should be set in inventory


################################
# Setup backend
################################

- hosts: databases
  tags: databases

  pre_tasks:
    - name: Setup splunk docker logging
      include_role:
        name: splunk-docker
        tasks_from: docker_logger_play
      vars:
        splunk_secured: True

  roles:

    # Postgres is a pre-req service for large Orthanc databases
    # If this role doesn't match the config expected by the orthanc role w pg backend,
    #  orthanc will re-create with preferred configuration (or --skip-tags deps)
    - name: Postgres
      role: postgres-docker
      postgres_use_data_container: False
      # Have to include both options as a flag to create the user
      postgres_user: "orthanc"
      postgres_password: "{{ service_password }}"

    # Redis is a pre-req service for distributed DIANA and Snappass
#    - name: Redis
#      role: redis-docker
#      # TODO: Redis: Add a data container or bind mount option


################################
# Setup front-end user services
################################

- hosts: servers
  tags:  frontend

  vars:
    trial_config:     "~/dev/DIANA/examples/central-imaging/trials.yml"
    user_config:      "~/dev/DIANA/_secrets/ci_users.yml"

  pre_tasks:

    - name: Setup splunk docker logging
      include_role:
        name: splunk-docker
        tasks_from: docker_logger_play
      vars:
        splunk_secured: True

    # Create upstreams for nginx
    - set_fact:
        config: "{{ lookup('file', trial_config, split_lines=False) | from_yaml }}"
    - set_fact:
        trials: "{{ config.trials }}"
        trial_base_port: "{{ config.trial_base_port }}"
    - set_fact:
        upstreams: "{{ [{'name': 'trialist', 'path': None,        'pool': [{'port': 5000}] },
                        {'name': 'snappass', 'path': '/snappass', 'pool': [{'port': 5001}] } ] }}"
    - set_fact:
        upstreams: "{{ upstreams + [{'name': trial.study_id, 'path': '/'+trial.study_id+'/images', 'pool': [{'port': trial_base_port|int + trial.port_offset|int + 3}]}] }}"
      with_list: "{{ trials }}"
      loop_control:
        loop_var: trial
    - debug:
        msg: "{{ upstreams }}"

  roles:

    - name: httpd
      role: nginx-docker
      nginx_upstreams:        "{{ upstreams }}"
      nginx_host_name:        "{{ public_host_name }}.{{ common_name }}"
      nginx_secured:          True

    - name: front end
      role: diana-docker
      # diana_docker_tag: "{{ arch_tag }}"  # TODO: problem with manifesting latest
      diana_container_name: diana-trialist
      diana_workdir: /opt/diana/apps/trialist
      diana_extra_env:
        DIANA_TRIALIST_CONFIG: /opt/diana/examples/central-imaging/trials.yml
        DIANA_TRIALIST_ENABLE_AUTH: False
      diana_command: >
        bash -c 'git pull
        && pip install -r ../../requirements.txt
        && pip install -e ../../packages/guidmint ../../packages/diana
        && pip install -r requirements.txt
        && gunicorn -w 4 -b 0.0.0.0:5000 trialist:app'

    ## && python3 trialist.py'
    # TODO: Trialist: use gunicorn instead
      diana_ports:
        - "5000:5000"

    - name: ftpd
      role: pureftpd-docker
      pftp_use_data_container: False
      pftp_data_dir:         "/data/ftp"
      pftp_host_name:        "{{ public_host_name }}.{{ common_name }}"
      pftp_service_password: "{{ service_password }}"


################################
# Setup trails based on trials.yml
################################

- name: Setup trials
  hosts: servers
  tags: trials

  vars:
    trial_config:     "~/dev/DIANA/examples/central-imaging/trials.yml"

    indexer_host:        '{{ hostvars[groups["indexers"][0]].public_host_name }}.{{ common_name }}'
    # indexer_host:        '{{ hostvars[groups["indexers"][0]].ansible_host }}'
    indexer_protocol:    'https'
    indexer_port:        8088
    indexer_dicom_tok:   '{{ hostvars[groups["indexers"][0]].splunk_hec_tokens.dicom_tok.value }}'

  pre_tasks:

    - name: Setup splunk docker logging
      include_role:
        name: splunk-docker
        tasks_from: docker_logger_play
      vars:
        splunk_secured: True

  tasks:

    - set_fact:
        config: "{{ lookup('file', trial_config, split_lines=False) | from_yaml }}"
    - set_fact:
        trials: "{{ config.trials }}"
        trial_base_port: "{{ config.trial_base_port }}"

    - name: "Add queued orthancs for {{ trial.full_name }}"
      include_role:
        name: queued-orthanc
      vars:
        qorth_base_name: "{{ trial.study_id }}"
        qorth_destination:
          orthanc_docker_image: jodogne/orthanc-plugins
          orthanc_pg_backend: True
          orthanc_use_data_container: False
          orthanc_ports:
            dicom: "{{ trial_base_port|int + trial.port_offset|int + 2 }}"
            api:   "{{ trial_base_port|int + trial.port_offset|int + 3 }}"

        qorth_queue:
          orthanc_docker_image: jodogne/orthanc
          orthanc_ports:
            dicom: "{{ trial_base_port|int + trial.port_offset|int + 0 }}"
            api:   "{{ trial_base_port|int + trial.port_offset|int + 1 }}"

        qorth_viewer:
          orthanc_docker_image: osimis/orthanc
          orthanc_ports:
            dicom: "{{ trial_base_port|int + trial.port_offset|int + 4 }}"
            api:   "{{ trial_base_port|int + trial.port_offset|int + 5 }}"

      with_list: "{{ trials }}"
      loop_control:
        loop_var: trial

# TODO: Confirm Watcher works
# TODO: Add reader credentials to viewers


################################
# Setup a diana-workers (if needed)
################################

- name: Setup handlers
  hosts: servers
  tags: handlers

  pre_tasks:

    - name: Setup splunk docker logging
      include_role:
        name: splunk-docker
        tasks_from: docker_logger_play
      vars:
        splunk_secured: True

  # TODO: Diana-Watcher: Check that it moves data from file -> queue -> archive w anonymization
  roles:
    - name: diana
      role: diana-docker
      diana_docker_tag: "{{ arch_tag }}"  # TODO: problem with manifesting latest
      diana_container_name: diana-watcher
      diana_resources_dir: "/{{ config_dir }}/routing"
      diana_data_dir: "/data/ftp"
      diana_bind_data_dir: True
      diana_command: >
        bash -c 'git pull
        && pip install -r requirements.txt
        && pip install -e packages/guidmint packages/diana
        && python3 apps/cli.old/diana-watcher.py --services_dir /resources/services --routes_dir /resources/routes'


