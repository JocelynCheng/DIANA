---

# $ ansible-playbook -i test_inv.yml central-im-playbook.yml -b --skip-tags skip -t databases
# $ ansible-playbook -i ../../_secrets/do_inv.yml central-im-playbook.yml -b --skip-tags secured

# Notes -- could also run trialist, snappass, guidmint apps as dokku apps for easy update

################################
# Setup indexer
################################

- hosts: indexer
  tags:  indexer

  roles:

    # indexer role includes a cert stage; (shutdown nginx and) ensure certs are up to date
    - name: Splunk
      role: indexer
      # If using certbot
      secured_cb_standalone: True
      secured_cb_staging:    False

      splunk_indices: [logging, remotes, dicom]
      # Persistent values for tokens should be set in inventory

  # TODO: Don't secure if you don't have a _FQDN_
#  post_tasks:
#    - name: Add selfsigned certs to trusted
#      include: install_certs_play.yml
#      vars:
#        certs_loc: secrets/crt
#      when: cert_type == 'selfsigned'


################################
# Setup backend
################################

- hosts: databases
  tags: databases

  vars:
    logger:           "json-file"
# splunk doesn't work with self signed certs
#    log_opts:
#      "splunk-token": '{{ hostvars[groups["indexer"][0]].splunk_hec_tokens.logging_tok.value }}'
#      "splunk-index": '{{ hostvars[groups["indexer"][0]].splunk_hec_tokens.logging_tok.index }}'
#      "splunk-url":   'https://{{ hostvars[groups["indexer"][0]].public_host_name }}.{{ common_name }}:8088'

  roles:

    # Pre-req service for DIANA-Watcher and Snappass
#    - name: Redis
#      role: redis-docker
#      # TODO: Redis: Add a data container or bind mount option

    # Pre-req service for large Orthanc databases
    # If this role doesn't match the config expected by the orthanc role w pg backend,
    #  orthanc will re-create with preferred configuration
    # Create orthanc service user (default for orthanc_pg_user)
    - name: Postgres
      role: postgres-docker
      postgres_use_data_container: False
      postgres_user: "orthanc"
      postgres_password: "{{ service_password }}"


################################
# Setup front-end user services
################################

- hosts: servers
  tags:  frontend

  vars:
    trial_config:     "~/dev/DIANA/examples/central-imaging/trials.yml"

  pre_tasks:

#    - include: copy_certbot_certs_play.yml
#      vars:
#        secured_cert_dir: "{{ config_dir }}/certs"
#        secured_host_name: "{{ public_host_name }}.{{ common_name }}"

    # Create upstreams for nginx
    - set_fact:
        config: "{{ lookup('file', trial_config, split_lines=False) | from_yaml }}"
    - set_fact:
        trials: "{{ config.trials }}"
        trial_base_port: "{{ config.trial_base_port }}"
    - set_fact:
        upstreams: "{{ [{'name': 'trialist', 'path': None,        'pool': [{'port': 5000}] },
                        {'name': 'snappass', 'path': '/snappass', 'pool': [{'port': 5001}] } ] }}"
    - set_fact:
        upstreams: "{{ upstreams + [{'name': trial.study_id, 'path': '/'+trial.study_id+'/images', 'pool': [{'port': trial_base_port|int + trial.port_offset|int + 3}]}] }}"
      with_list: "{{ trials }}"
      loop_control:
        loop_var: trial
    - debug:
        msg: "{{ upstreams }}"

  roles:

    - name: front end
      role: diana-docker
      diana_docker_tag: arm64v8  # TODO: problem with manifesting latest (new interface?)
      diana_container_name: diana-trialist
      diana_workdir: /opt/diana/apps/trialist
      diana_extra_env:
        DIANA_TRIALIST_CONFIG: /opt/diana/examples/central-imaging/trials.yml
      diana_bind_data_dir: True
      diana_command: >
        bash -c 'git pull
        && pip install -r ../../requirements.txt
        && pip install -e ../../packages/guidmint ../../packages/diana
        && pip install -r requirements.txt
        && python3 trialist.py'
#        gunicorn -w 4 -b 0.0.0.0:5000 trialist:app'
    # TODO: Trialist: use gunicorn instead
      diana_ports:
        - "5000:5000"
    # TODO: Trialist: Add user credentials to protect upload

#    - name: snappass
#      role: snappass-docker
#      snappass_port: 5001
#      snappass_redis_container_name:  redis
#      snappass_redis_db: 3

#    - name: ftpd
#      role: pureftpd-docker
#      pftp_use_data_container: False
#      pftp_data_dir:         "/data/ftp"
#      pftp_host_name:        "{{ public_host_name }}.{{ common_name }}"
#      pftp_service_password: "{{ service_password }}"
#      # TODO: FTP: Check that this works

    - name: httpd
      role: nginx-docker
      nginx_upstreams:        "{{ upstreams }}"
      nginx_host_name:        "{{ public_host_name }}.{{ common_name }}"
      nginx_secured:          True

# Update certs as required (once a month or so)
#    - role: secured
#      tags: secured
#      secured_cert_type:      "certbot"
#      secured_cb_standalone:  False  # Use webroot
#      secured_common_name:    "{{ common_name }}"
#      secured_host_name:      "{{ public_host_name }}.{{ common_name }}"
#      secured_admin_email:    "derek.merck@gmail.com"
#      secured_org_name:       "Central Medical Imaging Registry"


################################
# Setup trails based on trials.yml
################################

- name: Setup trials
  hosts: servers
  tags: trials

  vars:
    trial_config:     "~/dev/DIANA/examples/central-imaging/trials.yml"

    indexer_host:        '{{ hostvars[groups["indexer"][0]].public_host_name }}.{{ common_name }}'
    # indexer_host:        '{{ hostvars[groups["indexer"][0]].ansible_host }}'
    indexer_protocol:    'https'
    indexer_port:        8088
    indexer_dicom_tok:   '{{ hostvars[groups["indexer"][0]].splunk_hec_tokens.dicom_tok.value }}'


  tasks:

    - set_fact:
        config: "{{ lookup('file', trial_config, split_lines=False) | from_yaml }}"
    - set_fact:
        trials: "{{ config.trials }}"
        trial_base_port: "{{ config.trial_base_port }}"

    - name: "Add queued orthancs for {{ trial.full_name }}"
      include_role:
        name: queued-orthanc
      vars:
        qorth_base_name: "{{ trial.study_id }}"
        qorth_destination:
          # orthanc_docker_image: jodogne/orthanc-plugins
          orthanc_docker_image: derekmerck/orthanc
          orthanc_docker_image_tag: or132-arm64v8
          orthanc_pg_backend: True
          orthanc_use_data_container: False
          orthanc_ports:
            dicom: "{{ trial_base_port|int + trial.port_offset|int + 2 }}"
            api:   "{{ trial_base_port|int + trial.port_offset|int + 3 }}"

        qorth_queue:
          orthanc_docker_image: derekmerck/orthanc
          orthanc_docker_image_tag: or132-arm64v8
          orthanc_ports:
            dicom: "{{ trial_base_port|int + trial.port_offset|int + 0 }}"
            api:   "{{ trial_base_port|int + trial.port_offset|int + 1 }}"

      with_list: "{{ trials }}"
      loop_control:
        loop_var: trial


################################
# Setup a diana-workers (if needed)
################################

- name: Setup handlers
  hosts: servers
  tags: handlers

  vars:
    logger:           "json-file"
#    log_opts:
#      "splunk-token": '{{ hostvars[groups["indexer"][0]].splunk_hec_tokens.logging_tok.value }}'
#      "splunk-index": '{{ hostvars[groups["indexer"][0]].splunk_hec_tokens.logging_tok.index }}'
#      "splunk-url":   'https://{{ hostvars[groups["indexer"][0]].public_host_name }}.{{ common_name }}:8088'

  # TODO: Diana-Watcher: Check that it moves data from file -> queue -> archive w anonymization
  roles:
    - name: diana
      role: diana-docker
      diana_docker_tag: amd64  # TODO: Diana-Docker: problem with manifesting latest (new interface?)
      diana_container_name: diana-watcher
      diana_resources_dir: "/{{ config_dir }}/routing"
      diana_data_dir: "/data/ftp"
      diana_bind_data_dir: True
      diana_command: >
        bash -c 'git pull
        && pip install -r requirements.txt
        && pip install -e packages/guidmint packages/diana
        && python3 apps/cli/diana-watcher.py --services_dir /resources/services --routes_dir /resources/routes'


