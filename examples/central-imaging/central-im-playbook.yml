---

# Notes -- could also run trialist, snappass, guidmint apps as dokku apps

################################
# Setup databases
################################

- hosts: databases
  tags: databases

  vars:
    service_password: "passw0rd!"
    data_dir:         "/data"
    config_dir:       "/config"

  roles:
    - name: Splunk
      role: splunk-docker
      splunk_password: "{{ service_password }}"
      splunk_use_data_container: False
      splunk_data_dir: "{{ data_dir }}/splunk"

    # Pre-req service for DIANA-Watcher and Snappass
    - name: Redis
      role: redis-docker
      password: "{{ service_password }}"
      # TODO: Add a data container or bind mount

    - name: Postgres
      role: matic-insurance.docker-postgres
      # TODO: Add a data container or a bind mount option, fix pg10 to use encrypted pw


################################
# Setup internet services
################################

- hosts: servers
  tags: internet

  vars:
    public_host:      "central-imaging.com"
    service_password: "passw0rd!"
    data_dir:         "/data"
    config_dir:       "/config"
    trial_config:     "~/dev/DIANA/examples/central-imaging/trials.yml"

  pre_tasks:

    # CREATE UPSTREAMS FOR NGINX
    - set_fact:
        config: "{{ lookup('file', trial_config, split_lines=False) | from_yaml }}"
    - set_fact:
        trials: "{{ config.trials }}"
        trial_base_port: "{{ config.trial_base_port }}"
    - set_fact:
        upstreams: "{{ [{'name': 'trialist', 'path': None,        'pool': [{'port': 5000}] },
                        {'name': 'snappass', 'path': '/snappass', 'pool': [{'port': 5001}] } ] }}"
    - set_fact:
        upstreams: "{{ upstreams + [{'name': trial.study_id, 'path': '/'+trial.study_id+'/images', 'pool': [{'port': trial_base_port|int + trial.port_offset|int + 3}]}] }}"
      with_list: "{{ trials }}"
      loop_control:
        loop_var: trial

    - debug:
        msg: "{{ upstreams }}"

  roles:

   # Installing this also links in the examples directory in config
    - name: front end
      role: diana-docker
      diana_container_name: DIANA-trialist
      diana_workdir: /usr/share/source/diana/apps/trialist
      diana_command: "bash -c 'git pull && pip install -r requirements.txt && DIANA_TRIALIST_CONFIG=/usr/share/source/diana/examples/central-imaging/trials.yml python3 trialist.py'"
      diana_ports:
        - "5000:5000"

    - name: snappass
      role: snappass-docker
      snappass_port:           5001
      snappass_redis_container_name:  redis
      snappass_redis_password: "{{ service_password }}"
      snappass_redis_db:       3

    - name: httpd
      role: nginx-docker
      nginx_public_host:     "http.{{ public_host }}"
      nginx_secure_host:     "https.{{ public_host }}"
      nginx_upstreams:  "{{ upstreams }}"


    - name: ftpd
      role: pureftpd-docker
      pftp_use_data_container: False
      pftp_data_dir:         "{{ data_dir }}/ftp"
      pftp_public_host:      "ftp.{{ public_host }}"
      pftp_service_password: "{{ service_password }}"

# TODO: certbot
#    - name: certbot
#      role: certbot <----??


################################
# Setup trails based on trials.yml
################################

- name: Setup trials
  hosts: servers
  tags: trials

  vars:
    service_password: "passw0rd!"
    data_dir:         "/data"
    config_dir:       "/config"
#    trial_config:     "{{ config_dir }}/diana/examples/central-imaging/trails.yml"
    trial_config:     "~/dev/DIANA/examples/central-imaging/trials.yml"

  tasks:

    - set_fact:
        config: "{{ lookup('file', trial_config, split_lines=False) | from_yaml }}"
    - set_fact:
        trials: "{{ config.trials }}"
        trial_base_port: "{{ config.trial_base_port }}"

#    - debug:
#        msg: "{{ trial_base_port|int + item.port_offset|int + 1 }}"
#      with_list: "{{ trials }}"


    - name: "Add queued orthancs for {{ trial.full_name }}"
      include_role:
        name: queued-orthanc
      vars:
        qorth_base_name: "{{ trial.study_id }}"
        qorth_destination:
          orthanc_docker_image: jodogne/orthanc
          orthanc_pg_backend: False
          orthanc_use_data_container: False
          orthanc_password:  "{{ service_password }}"
          orthanc_ports:
            dicom: "{{ trial_base_port|int + trial.port_offset|int + 2 }}"
            api:   "{{ trial_base_port|int + trial.port_offset|int + 3 }}"

        qorth_queue:
          orthanc_password:  "{{ service_password }}"
          orthanc_ports:
            dicom: "{{ trial_base_port|int + trial.port_offset|int + 0 }}"
            api:   "{{ trial_base_port|int + trial.port_offset|int + 1 }}"

      with_list: "{{ trials }}"
      loop_control:
        loop_var: trial


################################
# Setup a DIANA-Workers (if needed)
################################

- name: Setup handlers
  hosts: servers
  tags: handlers

  vars:
    service_password: "passw0rd!"
    data_dir:         "/data"
    config_dir:       "/config"

  roles:
    - name: diana
      role: diana-docker
      diana_container_name: diana-watcher
      diana_command: "python3 apps/cli/watcher.py {{ config_dir }}/diana/routes"

      # TODO: when diana/routes is not empty

