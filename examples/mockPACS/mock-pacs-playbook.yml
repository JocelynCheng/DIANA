---

# $ ansible-playbook -i test_inv.yml mock-pacs-playbook.yml -b
# $ ansible-playbook -i ../../_secrets/lifespan_inv.yml mock-pacs-playbook.yml -b --ask-sudo-pass --skip-tags deps

################################
# Setup DIANA mockPACS
################################

- hosts: mock
  tags:  receiver

  vars:
    service_password: "{{  hostvars[inventory_hostname]['service_password'] | default('passw0rd') }}"
    data_dir:         "{{  hostvars[inventory_hostname]['data_dir'] | default('/data') }}"
    config_dir:       "{{  hostvars[inventory_hostname]['config_dir'] | default('/config') }}"

  roles:

    - name: MockPACS
      role: orthanc-docker
      orthanc_container_name: mock
      orthanc_user:     mock
      orthanc_password: mock
      orthanc_api_port: 2408
      orthanc_dicom_port: 2424
      orthanc_max_pts:  50
      orthanc_aet:     "MOCK"

      # NOTE: Watcher AET/ip/port must be added to PACS manually by site-adminsitrator
      orthanc_modalities:
        dianasvc: '{{ ["DIANASVC", dockerhost_ip, 8998] }}'


    - name: MockCTScanner0
      role: diana-docker
      diana_container_name: diana-mock
      diana_command: >
        bash -c 'git pull &&
        pip install -r requirements.txt &&
        pip install -e packages/diana &&
        python3 apps/cli/diana-mock.py -S DIANA_SERVICES scanner -d mock -r 30'
      diana_extra_env:
        DIANA_SERVICES: "{{ {'mock': {'host': dockerhost_ip, 'port': 2408, 'user': 'mock', 'password': 'mock' } } | tojson | safe }}"



################################
# Setup DIANA Monitor
################################

- hosts: mock
  tags:  watcher

  vars:
    service_password: "{{  hostvars[inventory_hostname]['service_password'] | default('passw0rd') }}"
    data_dir:         "{{  hostvars[inventory_hostname]['data_dir'] | default('/data') }}"
    config_dir:       "{{  hostvars[inventory_hostname]['config_dir'] | default('/config') }}"

    remotes_tok:      "c6bf0374-216b-4b4a-bbcf-3366dde3072f"

  # TODO: Won't have this for std image, have to configure it via -S services env var
  pre_tasks:

  - name: Get dockerhost
    shell: /sbin/ip route | awk '/docker0/ { print $NF }'
    register: dockerhost_response
    when: dockerhost_ip is not defined

  - set_fact:
      dockerhost_ip:    "{{ dockerhost_response.stdout }}"
    when: dockerhost_ip is not defined

    # TODO: Won't have this for std image, have to configure it manually through env
  - name: Copy service config
    template:
      src: watcher_services.yml.j2
      dest: /config/diana-watcher/services.yml

  roles:

  - name: Create DIANA-Watcher Proxy
    role: orthanc-docker
    orthanc_container_name: dw-proxy
    orthanc_api_port:   8999
    orthanc_dicom_port: 8998
    orthanc_aet: "DIANASVC"

    # TODO: Won't have this for std image, have to configure it manually through reconf func
    orthanc_modalities:
      pacs: '{{ ["MOCK", dockerhost_ip, 2424] }}'

  - name: DIANA-Watcher
    role: diana-docker
    diana_container_name: diana-watcher
    diana_resources_dir: "{{ config_dir }}"
    # Can replace -s by -S env variable for reDIANA
    diana_command1: >
      bash -c 'git pull &&
      pip install -r requirements.txt &&
      pip install -e packages/diana &&
      python3 apps/cli/diana-watcher.py -s /config/services.yml -r proxied_index orthanc_proxy splunk'

